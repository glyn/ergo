package main

import (
	"encoding/json"
	"fmt"
	"os"

	"github.com/glyn/ergo/cf"
)

type Props struct {
    Cf struct {
        Sample string
    }
}

func main() {
	fmt.Println("* Starting templated deploy errand")
	fmt.Printf("spring_cloud_broker.cf.sample=%s\n", "<%= properties.spring_cloud_broker.cf.sample %>")
	fmt.Printf("spring_cloud_broker YAML=%s\n", `<%= YAML.dump(p("spring_cloud_broker")) %>`)
	fmt.Printf("spring_cloud_broker JSON=%s\n", `<%= JSON.dump(p("spring_cloud_broker")) %>`)

    var props Props
	if err := json.Unmarshal([]byte(`<%= JSON.dump(p("spring_cloud_broker")) %>`), &props); err != nil {
    		fmt.Printf("json.Unmarshall failed: %s\n", err)
            		os.Exit(1)
    }

	fmt.Printf("spring_cloud_broker.cf.sample=%s\n", props.Cf.Sample)


	cf := cf.DefaultNew()
	v, err := cf.DisplayCfVersion()
	if err != nil {
		fmt.Printf("cf.DisplayCfVersion failed: %s\n", err)
		os.Exit(1)
	}
	fmt.Println(v)

	fmt.Println("* Finished templated deploy errand")
}
